//=================================================================
// Lists
//=================================================================

@mixin lists($custom: ()) {

	//-------------------------------------------------------------
	// Config
	//-------------------------------------------------------------

	$lists: config((
		name            : list
	), $custom);
	
	//-------------------------------------------------------------
	// Component
	//-------------------------------------------------------------
	
	@include component(list) {
	
	// Core Styles
	//-------------------------------------------------------------
	
	// Modifiers
	//-------------------------------------------------------------

	    @include modifier(reset) {
			@extend %list-reset;
		}
		
	    @include modifier(clear) {
			padding-left: 1em;
		}
		
		@include modifier(divider) {
			> li {
				&:not(:last-child) {
					padding-bottom: 1em;
					margin-bottom: 1em;
					border-bottom: 1px dotted rgba(black, 0.2);
				}
			}
		}
		
	    @include modifier(arrow) {
			@include extend(reset);
			> li {
				position: relative;
				line-height: 2;
				margin-bottom: 0 !important;
				padding-left: 1.5em;
				&:before {
					content: "\f138";
					position: absolute;
					left: 0;
					font-family: FontAwesome;
					margin-right: 0.5em;
					color: color(brand, primary);
				}
			}
		}
		
		@include modifier(tags) {
			@include extend(reset);
			> li {
				display: inline-block;
				font-size: font-size(size-2);
				background: color(greyscale, grey-3);
				color: white;
				padding: 0.1em 0.4em;
				transition: base(transition);
				&.plain {
					border: 1px solid rgba(0,0,0, 0.1);
					background: white;
					color: base(text-color);
				}
				&.scss, &.sass {
					background: #009ED7;
				}
				&.js {
					background: #90BB00;
				}
				&.html {
					background: #D63A36;
				}
				&.php {
					background: #9B58B5;
				}
			}	
			@include nested-modifier(links)	{
				> li {
					a {
						background-color: inherit;
						color: inherit;
					}
					&:hover {
						background: color(brand, primary);
						a {
							color: color(greyscale, white);
						}
					}
				}
			}
		}
		
	} // component(list)
	
} // @mixin lists