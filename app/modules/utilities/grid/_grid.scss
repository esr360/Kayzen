//=================================================================
// Grid
//=================================================================

@mixin grid($custom: ()) {

	//-------------------------------------------------------------
	// Config
	//-------------------------------------------------------------
	
    $grid: map-merge-deep((
		name                : grid,
		output-JSON         : true,
		options: (
			base-width      : 1200px,
			max-width       : 90%,
			small-width     : 940px,
			full-width      : 100%
        ),
        breakpoints: (
            break-5         : 1400px
        )
    ), $kayzenGS);
    
	$grid: config($grid, $custom) !global;
    
    @include kayzen-gs($grid);
    
    @include component(#{option($grid, 'options', 'row-namespace')}) {
    
        // Waffle Row
        //---------------------------------------------------------
    
        @include modifier('waffle') {
            @include modifier('infinite', $special: 'not') {
                margin-bottom: - option($grid, 'options', 'gutter');
            }
            > [class*="#{option($grid, 'options', 'col-namespace')}"] {
                margin-bottom: option($grid, 'options', 'gutter');
            }
            @include nested-modifier('large') {
                > [class*="#{option($grid, 'options', 'col-namespace')}"] {
                    margin-bottom: (option($grid, 'options', 'gutter') * 2);
                }
                @include modifier('infinite', $special: 'not') {
                    margin-bottom: - (option($grid, 'options', 'gutter') * 2);
                }
            }
        }
        
        @include modifier(has-dots) {
            margin-bottom: option($grid, 'options', 'gutter');
        }
        
        // Remove CSS transition from filterable elements
        @include modifier('filterable') {
            > [class*="#{option($grid, 'options', 'col-namespace')}"] {
                transition: 0s;
            }                
        }
        
    }
    
} // @mixin grid

@function breakpoint($breakpoint) {
    @return kgs-breakpoint($breakpoint);
}