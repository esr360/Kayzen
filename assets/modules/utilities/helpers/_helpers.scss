//=================================================================
// Helper Classes
//=================================================================

@mixin helpers($custom: ()) {

	//-------------------------------------------------------------
	// Visibility
	//-------------------------------------------------------------

	//Hide visually and from screen readers:
	.hidden {
		display: none !important;
	}
	
	// Hide only visually, but keep for screen readers
	// http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
	.visually-hidden {
		border: 0;
		clip: rect(0 0 0 0);
		height: 1px;
		margin: -1px;
		overflow: hidden;
		padding: 0;
		position: absolute;
		width: 1px;
		&.focusable {
			&:active, &:focus {
				clip: auto;
				height: auto;
				margin: 0;
				overflow: visible;
				position: static;
				width: auto;
			}
		}
	}

	// Hide visually and from screen readers, but maintain layout
	.invisible {
		visibility: hidden;
	}
	
	// Hide Overflow
	.hide-overflow {
		position: relative;
		overflow: hidden;
	}

	//-------------------------------------------------------------
	// Clearfix
	//-------------------------------------------------------------

	.clearfix, .cf {
		zoom: 1;
		&:before, 
		&:after { 
			content: ""; 
			display: table; 
		}
		&:after { 
			clear: both; 
		}
	}
	
	//-------------------------------------------------------------
	// Positioning
	//-------------------------------------------------------------
	
	.relative {
		position: relative;
	}
    
    .fixed-table {
        table-layout: fixed;
    }
    
    .rating {
        margin-top: 0.5em;
    }
    
    .flush {
        margin-top: 0 !important;
    }
    
    .sink {
        margin-bottom: 0 !important;
    }
	
	//-------------------------------------------------------------
	// Disabling
	//-------------------------------------------------------------
    
    %greyscale, .greyscale {
        filter: grayscale(100%);
        filter: gray; // IE6-9
        -webkit-filter: grayscale(100%);
    }
    
    %disabled, .disabled {
        @extend %greyscale;
        opacity: 0.8;
    }
    
	//-------------------------------------------------------------
	// Sizing
	//-------------------------------------------------------------
	
	.short {
        @media (min-width: option($grid, 'options', 'col-break')) {
		    width: 75%;
        }
	}
	
	.col-full {
        @media (min-width: breakpoint('break-3')) {
		    position: absolute !important;
            z-index: 3;
            height: 100%;
        }
	}
		
	//-------------------------------------------------------------
	// Aligning
	//-------------------------------------------------------------
    
    .force-align {
        white-space: nowrap;
    }
    
	// Text Aligning
	
	.text-left { 
		text-align: left !important; 
	}
	.text-center { 
		text-align: center !important; 
	}
	.text-right { 
		text-align: right !important; 
	}
    .text-justify {
		@media (min-width: breakpoint('break-2')) {
        	text-align: justify;
		}
    }
    
    .text-right-desktop {
        @media (min-width: option($grid, 'options', 'col-break')) {
		    text-align: right !important; 
        }
    }
    
    .text-right-break-2 {
        @media (min-width: breakpoint('break-2')) {
		    text-align: right !important; 
        }
    }
    
    .center-mobile {
        @media (max-width: option($grid, 'options', 'col-break')) {
		    text-align: center !important; 
        }
    }
	
    // Object Aligning
    
    .object-center {
        position: relative;
        left: 50%;
        transform: translateX(-50%);
    }
    
	// Vertical Aligning
	
	.va-top {
		vertical-align: top !important;
	}
	.va-middle {
		vertical-align: middle !important;
	}
	.va-bottom {
		vertical-align: bottom !important;
	}
	
	// Vertical Center
	
	.v-center {
		@include vertical-center;
	}
	
	//-------------------------------------------------------------
	// Background Size
	//-------------------------------------------------------------
	
	.bg-cover {
		background-size: cover;
	}
    
	//-------------------------------------------------------------
	// Social Background Colors
	//-------------------------------------------------------------
    
    @each $name, $color in palette('social') {
        .bg-#{$name} {
            background-color: #{$color};
        }
    }

	//-------------------------------------------------------------
	// Responsive Visibility
	//-------------------------------------------------------------

	// Show only when resolution is at most X
	@each $bp, $width in map-get($grid, 'breakpoints') {
		.max-#{$bp} {
			@media (min-width: $width) {
				display: none !important;
			}
		}
	}
	
	// Show only when resolution is at least X
	@each $bp, $width in map-get($grid, 'breakpoints') {
		.min-#{$bp} {
			@media (max-width: $width) {
				display: none !important;
			}
		}
	}
	
} // @mixin helpers