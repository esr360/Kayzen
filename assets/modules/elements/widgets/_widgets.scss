//=================================================================
// Widgets
//=================================================================

@mixin widgets($custom: ()) {

    //-------------------------------------------------------------
    // Config
    //-------------------------------------------------------------

    $widgets: config((
        'name'                           : 'widget',
        'block-background'               : color('greyscale', 'white'),
        'block-padding'                  : 2.5em 1em,
        'block-small-padding'            : 1.5em 1em,
        'block-fill-background'          : color('brand', 'primary'),
        'block-fill-color'               : color('greyscale', 'white'),
        'block-hover-background'         : color('brand', 'primary'),
        'block-hover-color'              : color('greyscale', 'white'),
        'block-hover-fill-background'    : darken(color('brand', 'primary'), 10%),
        'block-hover-panel-border-color' : color('brand', 'primary'),
        'panel-padding'                  : 4%,
        'panel-border'                   : 1px solid color('greyscale', 'grey-2'),
        'panel-small-padding'            : 4% 2%,
        'border'                         : 0.6em solid rgba(black, 0.15),
        'border-highlight-color'         : color('brand', 'primary'),
        'border-highlight-hover-color'   : rgba(black, 0.15),
        'scale'                          : 1.1,
        'zoom-bg-scale'                  : 1.3,
        'spectrum-quarter-padding'       : 2.5em 1em,
        'spectrum-quarter-large-padding' : 4%,
        'titleLink-color'                : typography('colors', 'heading'),
        'tub-color'                      : color('greyscale', 'white'),
        'tub-background'                 : rgba(black, 0.4),
        'feature-padding'                : 15% 2em 2em,
        'icon-color'                     : color('greyscale', 'grey-3'),
        'targeted-icon-visibility'       : (breakpoint('break-3'), breakpoint('break-5'))
    ), $custom);

    //-------------------------------------------------------------
    // Component
    //-------------------------------------------------------------

    @include module {

    // Core Styles
    //-------------------------------------------------------------

        transition: base('transition');
        
        &:hover {
            text-decoration: none;
        }

        @include overwrite-component('group', $parent: 'heading') {
            margin-bottom: 0;
            color: typography('colors', 'heading');
        }

    // Modifiers
    //-------------------------------------------------------------

        //---------------------------------------------------------
        // Block
        //---------------------------------------------------------
        
        @include modifier('block') {
            
            background: this('block-background');
            padding: this('block-padding');
            
            @include modifier('small') {
                padding: this('block-small-padding');
                @include overwrite-component('icon') {
                    margin-bottom: base('margin') * 0.57; // magic number 1 of 1
                }
            }
            
            @include modifier('fill') {
                background: this('block-fill-background');	
                color: this('block-fill-color');
                @include overwrite('heading') {
                    color: color('greyscale', 'white');
                }
                @include overwrite-component('icon') {
                    color: color('greyscale', 'white');
                }
            }
            
            @include modifier('noHover', $special: 'not') {
                &:hover {
                    background: this('block-hover-background');	
                    color: this('block-hover-color');
                    @include overwrite('heading') {
                        color: color('greyscale', 'white');
                    }
                    @include overwrite-component('icon') {
                        color: color('greyscale', 'white');
                    }
                    @include modifier('fill') {
                        background: this('block-hover-fill-background');
                    }
                    @include modifier('panel') {
                        border-color: this('block-hover-panel-border-color');
                    }
                }
            }
            
            a {
                border-bottom: 1px dotted;
                transition: base('transition');
            }
            
            &:hover {
                a {
                    color: inherit;
                    transition: 0s;
                }
            }
            
        } // modifier('block')
        
        //---------------------------------------------------------
        // Panel
        //---------------------------------------------------------

        @include modifier('panel') {
            padding: 3em;
            border-top: this('panel-border');	
            border-left: this('panel-border');
            @media (min-width: breapoint('break-2')) {
                padding: this('panel-padding');
            }
            @include modifier('small') {
                padding: this('panel-small-padding');
            }
            &:last-child {
                position: relative;
                &:before, &:after {
                    content: "";
                    position: absolute;
                    top: -1px;
                    transition: base('transition');
                    background: color('greyscale', 'grey-2');
                }
                &:before {
                    height: 100%;
                    width: 1px;
                    right: -1px;
                    z-index: 2;
                }
                &:after {
                    height: 1px;
                    width: 1000%;
                    left: 100%;
                }
                &:hover {
                    &:before {
                        background: color('brand', 'primary');
                    }
                }
            }
        }
        
        //---------------------------------------------------------
        // Border
        //---------------------------------------------------------

        @include modifier('borderTop') {
            border: 0; // reset border
            border-top: this('border');
            @include modifier('highlight') {
                border-top-color: this('border-highlight-color');
                &:hover {
                    border-top-color: this('border-highlight-hover-color');
                }
            }
        }

        @include modifier('borderLeft') {
            border-left: this('border');
            @include modifier('highlight') {
                border-left-color: this('border-highlight-color');
                &:hover {
                    border-left-color: this('border-highlight-hover-color');
                }
            }
        }
        
        //---------------------------------------------------------
        // Card
        //---------------------------------------------------------
        
        @include modifier('card') {
            position: relative;
            @include overwrite('heading') {
                a {
                    border-bottom: 1px dotted transparent;
                    &:hover {
                        border-bottom-color: inherit;
                    }
                }
            }
            @include overwrite-component('content') {
                border: 1px solid rgba(black, 0.1);
                border-top: 0;
                padding: base('margin');
            }
            @include overwrite('thumbnail') {
                margin-bottom: 0;
            }
        }

        //---------------------------------------------------------
        // Stacked
        //---------------------------------------------------------
        
        @include modifier('stacked') {
            margin-bottom: base('margin');
            @include vertical-rhythm('bottom');
            p {
                margin-top: (base('margin') / 2);
            }
            @media (max-width: breakpoint('break-2')) {
                .text-right-break-2 > & {
                    @include overwrite-component('icon') {
                        float: left;
                        margin-left: 0;
                        margin-right: 0.5rem;
                        margin-top: -0.5rem;
                    }
                }
            }
        }
        
        //---------------------------------------------------------
        // Scale
        //---------------------------------------------------------

        @include modifier('scale') {
            z-index: 1;
            transform: translateZ(0);
            @media (min-width: breakpoint('break-2')) {
                &:hover {
                    transform: scale(this('scale')) translateZ(0);
                    z-index: 5;
                }
            }
        }
        
        //---------------------------------------------------------
        // Zoom
        //---------------------------------------------------------
        
        @include modifier('zoom') {
            overflow: hidden;
            @include overwrite-component('group', $parent: 'heading') {
                color: color('greyscale', 'white');
            }
            &:hover {
                .bg-img {
                    transform: scale(this('zoom-bg-scale'));
                }
            }
        }
        
        //---------------------------------------------------------
        // Media
        //---------------------------------------------------------
        
        @include modifier('media') {
            position: relative;
        }
        
        //---------------------------------------------------------
        // Spectrum
        //---------------------------------------------------------
        
        @include modifier('spectrum-quarter') {
            padding: this('spectrum-quarter-padding');
            color: color('greyscale', 'white');
            &:nth-child(1) {
                background: darken(color('brand', 'primary'), 6%);
            }
            &:nth-child(2) {
                background: darken(color('brand', 'primary'), 2%);
            }
            &:nth-child(3) {
                background: lighten(color('brand', 'primary'), 2%);
            }
            &:nth-child(4) {
                background: lighten(color('brand', 'primary'), 6%);
            }
            @include overwrite-component('group', $parent: 'heading') {
                color: color('greyscale', 'white');
            }
            @include modifier('large') {
                padding: this('spectrum-quarter-large-padding');
            }
        }
        
        //---------------------------------------------------------
        // Tub
        //---------------------------------------------------------

        @include modifier('tub') {
            padding: 0;
            position: relative;
            color: this('tub-color');
            &:before {
                @extend %fill-parent;
                content: "";
                background: this('tub-background');
            }
            &:hover {
                @include overwrite-component('lid') {
                    transform: translateY(-100%);
                }
                @include overwrite-component('content') {
                    transform: scale(1) translateY(-50%);
                }
                @include overwrite-component('sticker') {
                    top: 50%;
                }
            }
            @include overwrite-component('content') {
                position: absolute;
                top: calc(50% - 1em);
                width: 80%;
                transition: base('transition');
                left: 0;
                right: 0;
                margin: auto;
                transform: scale(0) translateY(-50%);
                @media (max-width: breakpoint('break-3')) {
                    top: 50%;
                }
                @include overwrite('button', $special: 'adjacent-sibling') {
                    position: absolute;
                    z-index: 2;
                    left: 0;
                    bottom: 0;
                    background: rgba(black, 0.4);
                    font-weight: bold;
                    @media (max-width: breakpoint('break-3')) {
                        display: none;
                    }
                }
            }
            @include overwrite-component('group', $parent: 'heading') {
                color: color('greyscale', 'white');
            }
        }
        
        @include component('titleLink') {
            color: this('titleLink-color');
        }
        
        @include component('lid') {
            background-color: inherit;
            position: relative;
            transition: base('transition');
            padding-top: 80%;
            height: 0;
            z-index: 2;
            @include overwrite('icon') {
                color: color('greyscale', 'white');
            }
        }
        
        @include component('sticker') {
            position: absolute;
            transition: base('transition');
            top: calc(50% - 1.5rem);
            transform: translateY(-50%);
            left: 0;
            right: 0;
            margin: auto;
            @media (max-width: breakpoint('break-3')) {
                top: 50%;
            }
            @include modifier('small') {
                @media (min-width: breakpoint('break-3')) {
                    top: calc(50% - 1.2rem);
                }
            }
        }
        
        //---------------------------------------------------------
        // Feature
        //---------------------------------------------------------
        
        @include modifier('feature') {
            padding: this('feature-padding');
            position: relative;
        }

        //---------------------------------------------------------
        // Greyscale
        //---------------------------------------------------------
        
        @include modifier('greyscale') {    
            @extend %greyscale;
            &:hover {
                filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale");
                -webkit-filter: grayscale(0%);
            }
        }
        
        //---------------------------------------------------------
        // Article
        //---------------------------------------------------------
        
        @include modifiers(('article', 'card')) {
            overflow: hidden;
            iframe {
                display: block;
            }
        }
        
        @include modifier('article') {
            margin-bottom: base('margin');
            &:not([class*="span"]) {
                &:after {
                    content: "";
                    display: block;
                    margin-top: base('margin');
                    @include extend(
                        $parent: 'hrule', 
                        $modifiers: 'stripes'
                    );
                }
            }
            &:last-of-type,  {
                margin-bottom: 0;
                &:after {
                    display: none;
                }
            }
            > .owl-carousel {
                @extend .object;
            }
        }
            
    // Components
    //-------------------------------------------------------------

        @include component {
            @include modifier('inline') {
                display: inline-block;
                vertical-align: middle;
                margin-bottom: 0 !important;
                + p {
                    margin-top: (base('margin') / 2);
                }
            }
        }
        
        //---------------------------------------------------------
        // Content
        //---------------------------------------------------------
        
        @include component('content') {
            display: block;
            transition: base('transition');
        }
        
        //---------------------------------------------------------
        // Group
        //---------------------------------------------------------
        
        @include component('group') {
            @include modifier('large') {
                margin-bottom: (base('margin') * 2);
                @include vertical-rhythm('bottom');
            }
            @include modifier('grid') {
                margin-bottom: -#{option($grid, 'options', 'gutter')} !important;
                @include overwrite('widget') {
                    margin-bottom: option($grid, 'options', 'gutter');
                }
            }
            @include modifier('panels') {
                @include overwrite {
                    border-bottom: 1px solid color('greyscale', 'grey-2');
                }
            }
            @include modifier('center') {
                @include overwrite {
                    text-align: center;
                }
            }
        }
        
        //---------------------------------------------------------
        // Icon
        //---------------------------------------------------------
        
        @include component('icon') {
            color: this('icon-color');
            margin-bottom: (base('margin') / 2);
            @media (min-width: breakpoint('break-3')) {
                margin-bottom: base('margin');
            }
            @include modifier('inline') {
                margin-right: 0.5rem;
            }
            @include modifier('light') {
                color: rgba(white, 0.4);
                @include context('parent-hovered') {
                    color: white;
                }
            }
            @include context('parent-hovered') {
                color: color('brand', 'primary');
            }
            #mobile-optimized &,
            #why-choose-us & {
                @media (min-width: nth(this('targeted-icon-visibility'), 1)) and (max-width: nth(this('targeted-icon-visibility'), 2)) {
                    display: none;
                }
            }
        }
        
        //---------------------------------------------------------
        // Header
        //---------------------------------------------------------
        
        @include component('header') {
            @include overwrite-component('icon', $special: 'adjacent-sibling') {
                margin-left: 0.5rem;
                margin-right: 0;
            }
            .col-full & {
                @media (min-width: breakpoint('break-3')) {
                    position: absolute;
                    bottom: 2em;
                }
            }
        }
        
        //---------------------------------------------------------
        // Controls
        //---------------------------------------------------------
        
        @include component('controls') {
            position: absolute;
            bottom: 0;
        }

    } // module

} // @mixin widgets