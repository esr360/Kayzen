//=================================================================
// Thumbnails
//=================================================================

@mixin thumbnails($custom: ()) {

    //-------------------------------------------------------------
    // Config
    //-------------------------------------------------------------

    $forms: config((
        'name'                         : 'thumbnail',
        'default-profile-size'         : 50px,
        'xsmall-profile-size'          : 24px,
        'small-profile-size'           : 44px,
        'large-profile-size'           : 75px,
        'xlarge-profile-size'          : 95px,
        'mask-background'              : rgba(black, 0.6),
        'mask-title-color'             : color('greyscale', 'white'),
        'mask-border-color'            : color('brand', 'primary'),
        'featureContent-background'    : rgba(black, 0.5),
        'featureContent-color'         : color('greyscale', 'white'),
        'featureContent-padding'       : 1.5em,
        'featureContent-heading-color' : color('greyscale', 'white')
    ), $custom);

    //-------------------------------------------------------------
    // Component
    //-------------------------------------------------------------
        
    // Fix for pixel rounding spacing issues
    .thumbnail {
        img {
            transform: scale(1.005) translateZ(0);
        }
    }
        
    @include module {

    // Core Styles
    //-------------------------------------------------------------

        position: relative;
        overflow: hidden;
        margin-bottom: base('margin');
        @include vertical-rhythm;
        
        .text-center > & {
            margin-left: auto;
            margin-right: auto;
        }
        
        .row-no-gutter > & {
            margin-bottom: 0;
        }
        
        img {
            transition: base('transition');
            min-width: 100%;
            display: block;
        }
        
        @include overwrite('button') {
            color: color('greyscale', 'white');
            border-color: color('greyscale', 'white');
        }

    // Modifiers
    //-------------------------------------------------------------

        @include modifier('mini') {
            margin-bottom: 1em;
        }

        @include modifier('feature') {
            @include overwrite-component('content') {
                position: absolute;
                bottom: 0;
                width: 100%;
                background: this('featureContent-background');
                padding: this('featureContent-padding');
                color: this('featureContent-color');
            }
            @include overwrite-component('group', $parent: 'heading') {
                color: this('featureContent-heading-color');
            }
        }

        @include modifier('profile') {
            height: this('default-profile-size');
            width: this('default-profile-size');
            img {
                max-width: none;
                width: auto;
                height: 101%;
                margin-left: -25%;
            }
            @include modifier('fill') {
                height: 0;
                width: 100%;
                padding-top: 100%;
                position: relative;
                img {
                    position: absolute;
                    top: 0;
                }
            }
            @include modifier('badge') {
                border: 0.25em solid white;
                box-shadow: 0 0 0 0.4em rgba(black, 0.2);
            }
            @include modifier('round') {
                overflow: hidden;
                border-radius: 50%;
            }
            @include modifier('xlarge') {
                height: this('xlarge-profile-size');
                width: this('xlarge-profile-size');
            }
            @include modifier('large') {
                height: this('large-profile-size');
                width: this('large-profile-size');
            }
            @include modifier('small') {
                height: this('small-profile-size');
                width: this('small-profile-size');
            }
            @include modifier('xsmall') {
                height: this('xsmall-profile-size');
                width: this('xsmall-profile-size');
            }
        }
        
        @include modifier('styled') {
            border: 0.3em solid white;
            box-shadow: 0px 0px 1px rgba(black, 0.2);
            display: block;
        }

        @include modifier('zoom') {
            &:hover {
                img {
                    transform: scale(1.25);
                }
            }
        }
        
        @include modifier('article') {
            height: 200px;
            @extend .center-xy;
        }
        
        @include modifier('inline') {
            display: inline-block;
            vertical-align: top;
        }

    // Components
    //-------------------------------------------------------------
        
        @include component('mask') {
            background: this('mask-background');
            position: absolute;
            z-index: 2;
            height: 100%;
            width: 100%;
            text-align: center;
            opacity: 0;
            visibility: hidden;
            transition: base('transition');
            &:before {
                content: "";
                position: absolute;
                border: 2px solid this('mask-border-color');
                top: 1.25rem;
                bottom: 1.25rem;
                left: 1.25rem;
                right: 1.25rem;
                z-index: 4;
                opacity: 0;
                transform: scale(1.15);		   
                transition: base('transition');
            }
            @include overwrite-component('group', $parent: 'heading') {
                &[class*="thumbnail_title"] { 
                    color: this('mask-title-color');
                }
            }
            @include overwrite('heading') {
                a {
                    color: inherit;
                    &:hover {
                        color: inherit;
                    }
                }
            }
            @include context('parent-hovered') {
                opacity: 1;
                visibility: visible;
                &:before {
                    opacity: 1;
                    transform: scale(1);
                }
            }
        }
        
        @include components(('controls', 'title')) {
            position: absolute;
            z-index: 6;
            transition: base('transition');
        }
        
        @include component('controls') {
            @extend %horizontal-center;
            top: 42.5%;
            transform: translateY(-50%);
            display: inline-block;
            @include context('parent-hovered') {
                top: 50%;
            }
            @include modifier('corner') {
                top: 2em;
                left: auto;
                right: 3em;
                @include context('parent-hovered') {
                    top: 4em;
                }
            }
        }
        
        @include component('title') {
            bottom: 1em;
            left: 3em;
            text-align: left;
            @include context('parent-hovered') {
                bottom: 3em;
            }
            $test: & !global;
        }
        
        @include component('excerpt') {
            font-weight: lighter;
            color: color('greyscale', 'grey-2');
        }
        
        @include component('nav') {
            .slide-prev, .slide-next {
                background: rgba(black, 0.4);
                &:hover {
                    background: color('brand', 'primary');
                }
            }
            .slide-prev {
                left: 0;
            }
            .slide-next {
                right: 0;
            }
        }
        
        @include component('grid') {
            margin: option($grid, 'options', 'gutter') auto;
            @include modifier(fade) {
                img {
                    opacity: 0.65;
                    cursor: pointer;
                    transition: base('transition');
                    transform: translateZ(0);
                    &:hover, &.active {
                        opacity: 1;
                    }
                }
            }
        }
        
        @include component('aside') {
            width: calc(100% - 100px);
            display: inline-block;
            vertical-align: top;
            padding-left: 1em;
        }
        
        // Nested thumbnail-profile
        
        @include overwrite($is: 'profile', $special: 'adjacent-sibling') {
            position: absolute;
            z-index: 3;
            top: 8%;
            left: -0.5em;
            transition: base('transition');
        }
        
    } // module

} // @mixin thumbnails