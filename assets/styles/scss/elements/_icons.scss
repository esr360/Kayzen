//=================================================================
// Icons
//=================================================================

@mixin icons($config: ()) {

	//-------------------------------------------------------------
	// Config
	//-------------------------------------------------------------

	$icons: config((
	), $config);
	
	$config: $icons !global;

	//-------------------------------------------------------------
	// Component
	//-------------------------------------------------------------

	@include component(icon) {

	// Core Styles
	//-------------------------------------------------------------
	
		background: color(greyscale, grey-4);
		color: color(greyscale, white);
		transition: base(transition);
		position: relative;
		display: inline-block;
		vertical-align: middle;
		text-align: center;
		transition: 0.4s;
		height: 2em;
		width: 2em;
		border: 1px solid;
		border-color: transparent;
		&:hover {
			background: darken(color(greyscale, grey-4), 10%);
			color: color(greyscale, white);
			text-decoration: none;
		}

		.fa {
			font-size: 0.9em;
			@include vertical-center(absolute);
			@extend %horizontal-center;
		}

	// Sizes
	//-------------------------------------------------------------

    	@include font-sizes;

	// Patterns
	//-------------------------------------------------------------

		@include modifier(plain) {
			background: none;
			height: 1em;
			width: 1em;
			&:hover {
				background: none;
				border-color: transparent;
			}
		}
	
		@include modifier(border) {
			background: none;
			color: color(greyscale, grey-3);
			border-color: color(greyscale, grey-3);
			&:hover {
				color: color(greyscale, white);
				background: color(brand, primary);
				border-color: color(brand, primary);
			}
		}
	
		@include modifier(round) {
			border-radius: 0.4em;
		}
	
		@include modifier(circle) {
			border-radius: 50%;
		}

	// Colors
	//-------------------------------------------------------------
	 
	 	// Brand Colors 
		@each $brand, $color in palette(brand) {
			@include modifier($brand) {
				background: $color;
				&:hover {
					background: darken($color, 10%);
				}
				@include nested-modifier(border) {
					background: transparent;
					border-color: $color;
					color: $color;
					&:hover {
						background: $color;
						color: color(greyscale, white);
					}
				}
			}
		}
	
	 	// Greyscale Colors 
		@each $greyscale, $color in palette(greyscale) {
			@include modifier($greyscale) {
				background: $color;
				&:hover {
					background: darken($color, 10%);
				}
				@include nested-modifier(border) {
					background: transparent;
					border-color: $color;
					color: $color;
					&:hover {
						background: $color;
						@if (lightness($color) > 80) {
							color: color(greyscale, grey-4);
						} @else {
							color: color(greyscale, white);
						}
					}
				}
			}
		}

	// Styles
	//-------------------------------------------------------------

//		@include modifier(primary) {
//			@include extend(round, size-4, brand-1);
//		}	

	// Sub-Components
	//-------------------------------------------------------------
	
		@include sub-component(group) {
			
			@include overwrite(icon) {
				margin-left: 1rem;
				&:first-child {
					margin-left: 0;
				}
			}
			
		}

	} // component(icon)
	
} // @mixin icons

//-----------------------------------------------------------------
// Font Awesome
//-----------------------------------------------------------------
	
// CDN version
//@import url("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");

// Self hosted version
@import "../../icons/font-awesome/css/font-awesome.min.css";

.fa {
	cursor: default;
}

a.fa, 
a .fa,
[class*="button"] .fa, 
button .fa {
	cursor: pointer;
}