//=================================================================
// Tooltips
//=================================================================

// Config
//-----------------------------------------------------------------

// ("color name", "background color", "text color")
$tooltip-colors: (
	(light, rgba($white, 0.8), $base-text-color),
);

$tooltip-positions: (
	top, 
	bottom, 
	left, 
	right
);
		
// Component
//-----------------------------------------------------------------

@include component(tooltip, data) {
	
	@include core(data) {
			
		position: relative;
		cursor: pointer;	
		
		@include nested-component(tooltip-content, true, static) {
			position: absolute;
			display: inline-block;
			max-width: 500px;
			white-space: pre;
			transition: $base-transition;
			// Appearance
			padding: 1em;
			border-radius: $base-radius;
			color: $white;
			background-color: rgba($black, 0.75);
			// Font reset
			font-size: 1rem;
			text-transform: none;
			font-weight: normal;
			// Hidden by default
			opacity: 0;
			visibility: hidden;
			// Show when parent component is hovered
            #{$parent}:hover & {
				opacity: 1;
				visibility: visible;
            }
			// Positions
			@each $tooltip-position in $tooltip-positions {
				[class*="tooltip-wrapper-"][class*="-#{$tooltip-position}"] & {
					#{$tooltip-position}: -1rem;
					@include triangle(#{$tooltip-position});
					@if $tooltip-position == top {
						transform: translateX(-50%) translateY(-100%);
					} @else if $tooltip-position == bottom {
						transform: translateX(-50%) translateY(100%);
					} @else if $tooltip-position == left {
						top: 50%;
						transform: translateX(-100%) translateY(-50%);
					} @else if $tooltip-position == right {
						top: 50%;
						transform: translateX(100%) translateY(-50%);
					}
				}	
			}
			// Colors
			@each $tooltip-color in $tooltip-colors {
				$namespace: nth($tooltip-color, 1);
				$color: nth($tooltip-color, 2);
				$text: nth($tooltip-color, 3);
				[class*="tooltip-wrapper-"][class*="-#{$namespace}"] & {
					color: $text;
					background: $color;
					@each $position in $tooltip-positions {
						@at-root .tooltip-wrapper-#{$position}-#{$namespace} .tooltip-content {
							&:after {
								border-#{$position}-color: $color !important;
							}
						}			
					}
				}
			}
		}

	} // core

} // component(tooltip)